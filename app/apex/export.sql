--------------------------------------------------------
--  File created - Friday-November-21-2014
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence PGIPAR_ATT_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PGIPAR_ATT_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PGIPAR_BLO_ATT_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PGIPAR_BLO_ATT_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PGIPAR_BLO_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PGIPAR_BLO_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PGIPAR_DAY_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PGIPAR_DAY_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PGIPAR_RAN_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PGIPAR_RAN_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 141 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PGIPAR_SCH_PAT_ATT_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PGIPAR_SCH_PAT_ATT_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PGIPAR_SCH_PAT_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PGIPAR_SCH_PAT_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 81 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence PRE_BLO_PLA_PK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "PRE_BLO_PLA_PK_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table PGIPAR_ATTRIBUTES
--------------------------------------------------------

  CREATE TABLE "PGIPAR_ATTRIBUTES"
   (	"PAR_ATT_ID" NUMBER,
	"PAR_ATT_CODE" VARCHAR2(20),
	"PAR_ATT_DEFAULT_VALUE" VARCHAR2(200),
	"PAR_ATT_DESCRIPTION" VARCHAR2(1000),
	"PAR_ATT_CREATION_USER" VARCHAR2(100),
	"PAR_ATT_CREATION_DATE" DATE,
	"PAR_ATT_MODIFICATION_USER" VARCHAR2(100),
	"PAR_ATT_MODIFICATION_DATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table PGIPAR_BLOCKS
--------------------------------------------------------

  CREATE TABLE "PGIPAR_BLOCKS"
   (	"PAR_BLO_ID" NUMBER,
	"PAR_BLO_CODE" VARCHAR2(100),
	"PAR_BLO_NAME" VARCHAR2(200),
	"PAR_BLO_TYPE" VARCHAR2(200) DEFAULT 'KID',
	"PAR_BLO_VALUE" NUMBER,
	"PAR_BLO_ACTIVE" CHAR(1) DEFAULT 'Y',
	"PAR_BLO_CREATION_USER" VARCHAR2(100),
	"PAR_BLO_CREATION_DATE" DATE,
	"PAR_BLO_MODIFICATION_USER" VARCHAR2(100),
	"PAR_BLO_MODIFICATION_DATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table PGIPAR_BLOCKS_ATTRIBUTES
--------------------------------------------------------

  CREATE TABLE "PGIPAR_BLOCKS_ATTRIBUTES"
   (	"PAR_BLO_ATT_ID" NUMBER,
	"PAR_BLO_ATT_BLO_ID" NUMBER,
	"PAR_BLO_ATT_ATT_ID" NUMBER,
	"PAR_BLO_ATT_VALUE" NVARCHAR2(200),
	"PAR_BLO_ATT_CREATION_USER" VARCHAR2(100),
	"PAR_BLO_ATT_CREATION_DATE" DATE,
	"PAR_BLO_ATT_MODIFICATION_USER" VARCHAR2(100),
	"PAR_BLO_ATT_MODIFICATION_DATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table PGIPAR_DAYS
--------------------------------------------------------

  CREATE TABLE "PGIPAR_DAYS"
   (	"PAR_DAY_ID" NUMBER,
	"PAR_DAY_CODE" VARCHAR2(100),
	"PAR_DAY_NAME" VARCHAR2(200),
	"PAR_DAY_CREATION_USER" VARCHAR2(100),
	"PAR_DAY_CREATION_DATE" DATE,
	"PAR_DAY_MODIFICATION_USER" VARCHAR2(100),
	"PAR_DAY_MODIFICATION_DATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table PGIPAR_RANGES
--------------------------------------------------------

  CREATE TABLE "PGIPAR_RANGES"
   (	"PAR_RAN_ID" NUMBER,
	"PAR_RAN_ORG_ID" NUMBER,
	"PAR_RAN_OPEN_FROM" NUMBER,
	"PAR_RAN_OPEN_TO" NUMBER,
	"PAR_RAN_VACATION" CHAR(1) DEFAULT 'N',
	"PAR_RAN_DAY_ID" NUMBER,
	"PAR_RAN_ACTIVE" CHAR(1) DEFAULT 'Y',
	"PAR_RAN_CREATION_USER" VARCHAR2(100),
	"PAR_RAN_CREATION_DATE" DATE,
	"PAR_RAN_MODIFICATION_USER" VARCHAR2(100),
	"PAR_RAN_MODIFICATION_DATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table PGIPAR_SCHEDULE_PATTERN
--------------------------------------------------------

  CREATE TABLE "PGIPAR_SCHEDULE_PATTERN"
   (	"PAR_SCH_PAT_ID" NUMBER,
	"PAR_SCH_PAT_BLO_ID" NUMBER,
	"PAR_SCH_PAT_RAN_ID" NUMBER,
	"PAR_SCH_PAT_START" NUMBER,
	"PAR_SCH_PAT_TYPE" VARCHAR2(200) DEFAULT 'KID',
	"PAR_SCH_PAT_ACTIVE" CHAR(1) DEFAULT 'Y',
	"PAR_SCH_PAT_CREATION_USER" VARCHAR2(100),
	"PAR_SCH_PAT_CREATION_DATE" DATE,
	"PAR_SCH_PAT_MODIFICATION_USER" VARCHAR2(100),
	"PAR_SCH_PAT_MODIFICATION_DATE" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table PGIPRE_PRESENCES
--------------------------------------------------------

  CREATE TABLE "PGIPRE_PRESENCES"
   (	"PRE_ID" NUMBER,
	"PRE_DAY" DATE,
	"PRE_ENF_ID" NUMBER,
	"PRE_ORG_ID" NUMBER,
	"PRE_UNI_INS_ID" NUMBER,
	"PRE_SUP_MONTANT" NUMBER,
	"PRE_SUP_COMMENT" VARCHAR2(250),
	"PRE_TRANSFERRED" NUMBER(1,0) DEFAULT 0,
	"PRE_HOURS_FACT" NUMBER DEFAULT 0,
	"PRE_MEALS_FACT" NUMBER DEFAULT 0,
	"PRE_CREATION_USER" VARCHAR2(100),
	"PRE_CREATION_DATE" DATE DEFAULT sysdate,
	"PRE_MODIFICATION_USER" VARCHAR2(100),
	"PRE_MODIFICATION_DATE" DATE DEFAULT sysdate
   ) ;
--------------------------------------------------------
--  DDL for Table PGIPRE_SCHEDULE
--------------------------------------------------------

  CREATE TABLE "PGIPRE_SCHEDULE"
   (	"PRE_SCH_ID" NUMBER,
	"PRE_SCH_PAR_SCH_PAT_ID" NUMBER,
	"PRE_SCH_PRE_ID" NUMBER,
	"PRE_SCH_PLAN" CHAR(1) DEFAULT 'Y',
	"PRE_SCH_REAL" CHAR(1) DEFAULT 'Y',
	"PRE_SCH_MEAL_PLAN" CHAR(1) DEFAULT 'N',
	"PRE_SCH_MEAL_REAL" CHAR(1) DEFAULT 'N',
	"PRE_SCH_CREATION_USER" VARCHAR2(100),
	"PRE_SCH_CREATION_DATE" DATE DEFAULT sysdate,
	"PRE_SCH_MODIFICATION_USER" VARCHAR2(100),
	"PRE_SCH_MODIFICATION_DATE" DATE DEFAULT sysdate
   ) ;
REM INSERTING into PGIPAR_ATTRIBUTES
SET DEFINE OFF;
Insert into PGIPAR_ATTRIBUTES (PAR_ATT_ID,PAR_ATT_CODE,PAR_ATT_DEFAULT_VALUE,PAR_ATT_DESCRIPTION,PAR_ATT_CREATION_USER,PAR_ATT_CREATION_DATE,PAR_ATT_MODIFICATION_USER,PAR_ATT_MODIFICATION_DATE) values (21,'COLOR_T','#FFFF80','the color on the blocks on the toolbar','nobody',to_date('18-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
Insert into PGIPAR_ATTRIBUTES (PAR_ATT_ID,PAR_ATT_CODE,PAR_ATT_DEFAULT_VALUE,PAR_ATT_DESCRIPTION,PAR_ATT_CREATION_USER,PAR_ATT_CREATION_DATE,PAR_ATT_MODIFICATION_USER,PAR_ATT_MODIFICATION_DATE) values (22,'COLOR_P','#FFFF00','the color on the blocks where planned','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_ATTRIBUTES (PAR_ATT_ID,PAR_ATT_CODE,PAR_ATT_DEFAULT_VALUE,PAR_ATT_DESCRIPTION,PAR_ATT_CREATION_USER,PAR_ATT_CREATION_DATE,PAR_ATT_MODIFICATION_USER,PAR_ATT_MODIFICATION_DATE) values (23,'COLOR_U','#FFFFE6','the color on the blocks where unplanned','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_ATTRIBUTES (PAR_ATT_ID,PAR_ATT_CODE,PAR_ATT_DEFAULT_VALUE,PAR_ATT_DESCRIPTION,PAR_ATT_CREATION_USER,PAR_ATT_CREATION_DATE,PAR_ATT_MODIFICATION_USER,PAR_ATT_MODIFICATION_DATE) values (24,'MEAL',null,'the attribute specifying the meal for the block','nobody',to_date('18-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
REM INSERTING into PGIPAR_BLOCKS
SET DEFINE OFF;
Insert into PGIPAR_BLOCKS (PAR_BLO_ID,PAR_BLO_CODE,PAR_BLO_NAME,PAR_BLO_TYPE,PAR_BLO_VALUE,PAR_BLO_ACTIVE,PAR_BLO_CREATION_USER,PAR_BLO_CREATION_DATE,PAR_BLO_MODIFICATION_USER,PAR_BLO_MODIFICATION_DATE) values (1,'K30','K30','KID',30,'Y','nobody',to_date('11-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
Insert into PGIPAR_BLOCKS (PAR_BLO_ID,PAR_BLO_CODE,PAR_BLO_NAME,PAR_BLO_TYPE,PAR_BLO_VALUE,PAR_BLO_ACTIVE,PAR_BLO_CREATION_USER,PAR_BLO_CREATION_DATE,PAR_BLO_MODIFICATION_USER,PAR_BLO_MODIFICATION_DATE) values (2,'K60','K60','KID',60,'Y','nobody',to_date('11-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
Insert into PGIPAR_BLOCKS (PAR_BLO_ID,PAR_BLO_CODE,PAR_BLO_NAME,PAR_BLO_TYPE,PAR_BLO_VALUE,PAR_BLO_ACTIVE,PAR_BLO_CREATION_USER,PAR_BLO_CREATION_DATE,PAR_BLO_MODIFICATION_USER,PAR_BLO_MODIFICATION_DATE) values (3,'S120','S120','STAFF',120,'Y','nobody',to_date('11-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
Insert into PGIPAR_BLOCKS (PAR_BLO_ID,PAR_BLO_CODE,PAR_BLO_NAME,PAR_BLO_TYPE,PAR_BLO_VALUE,PAR_BLO_ACTIVE,PAR_BLO_CREATION_USER,PAR_BLO_CREATION_DATE,PAR_BLO_MODIFICATION_USER,PAR_BLO_MODIFICATION_DATE) values (4,'S30','S30','STAFF',30,'Y','nobody',to_date('11-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
Insert into PGIPAR_BLOCKS (PAR_BLO_ID,PAR_BLO_CODE,PAR_BLO_NAME,PAR_BLO_TYPE,PAR_BLO_VALUE,PAR_BLO_ACTIVE,PAR_BLO_CREATION_USER,PAR_BLO_CREATION_DATE,PAR_BLO_MODIFICATION_USER,PAR_BLO_MODIFICATION_DATE) values (5,'S60','S60','STAFF',60,'Y','nobody',to_date('11-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
Insert into PGIPAR_BLOCKS (PAR_BLO_ID,PAR_BLO_CODE,PAR_BLO_NAME,PAR_BLO_TYPE,PAR_BLO_VALUE,PAR_BLO_ACTIVE,PAR_BLO_CREATION_USER,PAR_BLO_CREATION_DATE,PAR_BLO_MODIFICATION_USER,PAR_BLO_MODIFICATION_DATE) values (6,'K120','K120','KID',120,'Y','nobody',to_date('11-NOV-14','DD-MON-RR'),'nobody',to_date('18-NOV-14','DD-MON-RR'));
REM INSERTING into PGIPAR_BLOCKS_ATTRIBUTES
SET DEFINE OFF;
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (22,1,21,'#FFFF80','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (23,6,21,'#FFFF80','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (24,6,22,'#FFFF00','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (25,6,23,'#FFFFE6','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (26,2,21,'#FFFF80','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (27,2,22,'#FFFF00','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (28,2,23,'#FFFFE6','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (29,1,22,'#FFFF00','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (30,1,23,'#FFFFE6','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (31,4,21,'#FFCC80','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (32,4,22,'#FF9900','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (33,4,23,'#FFF5E6','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (34,3,21,'#FFCC80','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (35,3,22,'#FF9900','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (36,3,23,'#FFF5E6','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (37,5,21,'#FFCC80','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (38,5,22,'#FF9900','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_BLOCKS_ATTRIBUTES (PAR_BLO_ATT_ID,PAR_BLO_ATT_BLO_ID,PAR_BLO_ATT_ATT_ID,PAR_BLO_ATT_VALUE,PAR_BLO_ATT_CREATION_USER,PAR_BLO_ATT_CREATION_DATE,PAR_BLO_ATT_MODIFICATION_USER,PAR_BLO_ATT_MODIFICATION_DATE) values (39,5,23,'#FFF5E6','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
REM INSERTING into PGIPAR_DAYS
SET DEFINE OFF;
Insert into PGIPAR_DAYS (PAR_DAY_ID,PAR_DAY_CODE,PAR_DAY_NAME,PAR_DAY_CREATION_USER,PAR_DAY_CREATION_DATE,PAR_DAY_MODIFICATION_USER,PAR_DAY_MODIFICATION_DATE) values (1,'MON','lundi','PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_DAYS (PAR_DAY_ID,PAR_DAY_CODE,PAR_DAY_NAME,PAR_DAY_CREATION_USER,PAR_DAY_CREATION_DATE,PAR_DAY_MODIFICATION_USER,PAR_DAY_MODIFICATION_DATE) values (2,'TUE','mardi','PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_DAYS (PAR_DAY_ID,PAR_DAY_CODE,PAR_DAY_NAME,PAR_DAY_CREATION_USER,PAR_DAY_CREATION_DATE,PAR_DAY_MODIFICATION_USER,PAR_DAY_MODIFICATION_DATE) values (3,'WED','mercredi','PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_DAYS (PAR_DAY_ID,PAR_DAY_CODE,PAR_DAY_NAME,PAR_DAY_CREATION_USER,PAR_DAY_CREATION_DATE,PAR_DAY_MODIFICATION_USER,PAR_DAY_MODIFICATION_DATE) values (4,'THU','jeudi','PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_DAYS (PAR_DAY_ID,PAR_DAY_CODE,PAR_DAY_NAME,PAR_DAY_CREATION_USER,PAR_DAY_CREATION_DATE,PAR_DAY_MODIFICATION_USER,PAR_DAY_MODIFICATION_DATE) values (5,'FRI','vendredi','PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_DAYS (PAR_DAY_ID,PAR_DAY_CODE,PAR_DAY_NAME,PAR_DAY_CREATION_USER,PAR_DAY_CREATION_DATE,PAR_DAY_MODIFICATION_USER,PAR_DAY_MODIFICATION_DATE) values (6,'SAT','samedi','PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_DAYS (PAR_DAY_ID,PAR_DAY_CODE,PAR_DAY_NAME,PAR_DAY_CREATION_USER,PAR_DAY_CREATION_DATE,PAR_DAY_MODIFICATION_USER,PAR_DAY_MODIFICATION_DATE) values (7,'SUN','dimanche','PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'),null,null);
REM INSERTING into PGIPAR_RANGES
SET DEFINE OFF;
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (125,1,420,690,'N',1,'Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (126,1,720,900,'N',1,'Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (127,1,930,1080,'N',1,'Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (83,1,480,1140,'Y',1,'Y','nobody',to_date('11-NOV-14','DD-MON-RR'),'PCS_OWNER',to_date('14-NOV-14','DD-MON-RR'));
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (112,1,390,930,'N',5,'Y','nobody',to_date('17-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (110,1,390,990,'N',3,'Y','nobody',to_date('17-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (111,1,390,960,'N',4,'Y','nobody',to_date('17-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (107,1,360,960,'Y',2,'Y','nobody',to_date('17-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_RANGES (PAR_RAN_ID,PAR_RAN_ORG_ID,PAR_RAN_OPEN_FROM,PAR_RAN_OPEN_TO,PAR_RAN_VACATION,PAR_RAN_DAY_ID,PAR_RAN_ACTIVE,PAR_RAN_CREATION_USER,PAR_RAN_CREATION_DATE,PAR_RAN_MODIFICATION_USER,PAR_RAN_MODIFICATION_DATE) values (128,1,450,1080,'N',2,'Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
REM INSERTING into PGIPAR_SCHEDULE_PATTERN
SET DEFINE OFF;
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (30,6,128,480,'KID','Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (31,5,128,720,'KID','Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (32,3,128,780,'KID','Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (33,4,128,900,'KID','Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (34,6,128,570,'STAFF','Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (35,3,128,750,'STAFF','Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (36,5,128,900,'STAFF','Y','nobody',to_date('18-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (72,2,125,600,'KID','Y','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (73,2,126,780,'KID','Y','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (74,3,125,540,'STAFF','Y','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (75,3,126,780,'STAFF','Y','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (37,6,83,630,'KID','Y','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
Insert into PGIPAR_SCHEDULE_PATTERN (PAR_SCH_PAT_ID,PAR_SCH_PAT_BLO_ID,PAR_SCH_PAT_RAN_ID,PAR_SCH_PAT_START,PAR_SCH_PAT_TYPE,PAR_SCH_PAT_ACTIVE,PAR_SCH_PAT_CREATION_USER,PAR_SCH_PAT_CREATION_DATE,PAR_SCH_PAT_MODIFICATION_USER,PAR_SCH_PAT_MODIFICATION_DATE) values (38,6,83,840,'KID','Y','nobody',to_date('19-NOV-14','DD-MON-RR'),null,null);
REM INSERTING into PGIPRE_PRESENCES
SET DEFINE OFF;
REM INSERTING into PGIPRE_SCHEDULE
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index PGIPAR_ATTRIBUTES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_ATTRIBUTES_PK" ON "PGIPAR_ATTRIBUTES" ("PAR_ATT_ID")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_ATTRIBUTES_UK1
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_ATTRIBUTES_UK1" ON "PGIPAR_ATTRIBUTES" ("PAR_ATT_CODE")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_BLOCKS_ATTRIBUTES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_BLOCKS_ATTRIBUTES_PK" ON "PGIPAR_BLOCKS_ATTRIBUTES" ("PAR_BLO_ATT_ID")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_BLOCKS_CODE_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_BLOCKS_CODE_UK" ON "PGIPAR_BLOCKS" ("PAR_BLO_CODE")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_BLOCKS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_BLOCKS_PK" ON "PGIPAR_BLOCKS" ("PAR_BLO_ID")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_DAYS_CODE_UK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_DAYS_CODE_UK" ON "PGIPAR_DAYS" ("PAR_DAY_CODE")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_DAYS_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_DAYS_PK" ON "PGIPAR_DAYS" ("PAR_DAY_ID")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_RANGES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_RANGES_PK" ON "PGIPAR_RANGES" ("PAR_RAN_ID")
  ;
--------------------------------------------------------
--  DDL for Index PGIPAR_SCHEDULE_PATTERN_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPAR_SCHEDULE_PATTERN_PK" ON "PGIPAR_SCHEDULE_PATTERN" ("PAR_SCH_PAT_ID")
  ;
--------------------------------------------------------
--  DDL for Index PGIPRESENCES_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPRESENCES_PK" ON "PGIPRE_PRESENCES" ("PRE_ID")
  ;
--------------------------------------------------------
--  DDL for Index PGIPRE_SCHEDULE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "PGIPRE_SCHEDULE_PK" ON "PGIPRE_SCHEDULE" ("PRE_SCH_ID")
  ;
--------------------------------------------------------
--  Constraints for Table PGIPAR_ATTRIBUTES
--------------------------------------------------------

  ALTER TABLE "PGIPAR_ATTRIBUTES" ADD CONSTRAINT "PGIPAR_ATTRIBUTES_UK1" UNIQUE ("PAR_ATT_CODE") ENABLE;
  ALTER TABLE "PGIPAR_ATTRIBUTES" ADD CONSTRAINT "PGIPAR_ATTRIBUTES_PK" PRIMARY KEY ("PAR_ATT_ID") ENABLE;
  ALTER TABLE "PGIPAR_ATTRIBUTES" MODIFY ("PAR_ATT_CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_ATTRIBUTES" MODIFY ("PAR_ATT_CREATION_USER" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_ATTRIBUTES" MODIFY ("PAR_ATT_CODE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_ATTRIBUTES" MODIFY ("PAR_ATT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PGIPAR_BLOCKS
--------------------------------------------------------

  ALTER TABLE "PGIPAR_BLOCKS" ADD CONSTRAINT "PGIPAR_BLOCKS_CODE_UK" UNIQUE ("PAR_BLO_CODE") ENABLE;
  ALTER TABLE "PGIPAR_BLOCKS" ADD CONSTRAINT "PGIPAR_BLOCKS_PK" PRIMARY KEY ("PAR_BLO_ID") ENABLE;
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_CREATION_USER" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_ACTIVE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_VALUE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_TYPE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_NAME" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_CODE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS" MODIFY ("PAR_BLO_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PGIPAR_BLOCKS_ATTRIBUTES
--------------------------------------------------------

  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" ADD CONSTRAINT "PGIPAR_BLOCKS_ATTRIBUTES_PK" PRIMARY KEY ("PAR_BLO_ATT_ID") ENABLE;
  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" MODIFY ("PAR_BLO_ATT_CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" MODIFY ("PAR_BLO_ATT_CREATION_USER" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" MODIFY ("PAR_BLO_ATT_VALUE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" MODIFY ("PAR_BLO_ATT_ATT_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" MODIFY ("PAR_BLO_ATT_BLO_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" MODIFY ("PAR_BLO_ATT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PGIPAR_DAYS
--------------------------------------------------------

  ALTER TABLE "PGIPAR_DAYS" ADD CONSTRAINT "PGIPAR_DAYS_CODE_UK" UNIQUE ("PAR_DAY_CODE") ENABLE;
  ALTER TABLE "PGIPAR_DAYS" ADD CONSTRAINT "PGIPAR_DAYS_PK" PRIMARY KEY ("PAR_DAY_ID") ENABLE;
  ALTER TABLE "PGIPAR_DAYS" MODIFY ("PAR_DAY_CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_DAYS" MODIFY ("PAR_DAY_CREATION_USER" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_DAYS" MODIFY ("PAR_DAY_NAME" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_DAYS" MODIFY ("PAR_DAY_CODE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_DAYS" MODIFY ("PAR_DAY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PGIPAR_RANGES
--------------------------------------------------------

  ALTER TABLE "PGIPAR_RANGES" ADD CONSTRAINT "PGIPAR_RANGES_PK" PRIMARY KEY ("PAR_RAN_ID") ENABLE;
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_CREATION_USER" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_ACTIVE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_DAY_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_VACATION" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_OPEN_TO" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_OPEN_FROM" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_ORG_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_RANGES" MODIFY ("PAR_RAN_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PGIPAR_SCHEDULE_PATTERN
--------------------------------------------------------

  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" ADD CONSTRAINT "PGIPAR_SCHEDULE_PATTERN_PK" PRIMARY KEY ("PAR_SCH_PAT_ID") ENABLE;
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" MODIFY ("PAR_SCH_PAT_CREATION_DATE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" MODIFY ("PAR_SCH_PAT_CREATION_USER" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" MODIFY ("PAR_SCH_PAT_ACTIVE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" MODIFY ("PAR_SCH_PAT_TYPE" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" MODIFY ("PAR_SCH_PAT_RAN_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" MODIFY ("PAR_SCH_PAT_BLO_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" MODIFY ("PAR_SCH_PAT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PGIPRE_PRESENCES
--------------------------------------------------------

  ALTER TABLE "PGIPRE_PRESENCES" ADD CONSTRAINT "PGIPRESENCES_PK" PRIMARY KEY ("PRE_ID") ENABLE;
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_MEALS_FACT" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_HOURS_FACT" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_TRANSFERRED" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_UNI_INS_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_ORG_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_ENF_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_DAY" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_PRESENCES" MODIFY ("PRE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PGIPRE_SCHEDULE
--------------------------------------------------------

  ALTER TABLE "PGIPRE_SCHEDULE" ADD CONSTRAINT "PGIPRE_SCHEDULE_PK" PRIMARY KEY ("PRE_SCH_ID") ENABLE;
  ALTER TABLE "PGIPRE_SCHEDULE" MODIFY ("PRE_SCH_MEAL_REAL" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_SCHEDULE" MODIFY ("PRE_SCH_MEAL_PLAN" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_SCHEDULE" MODIFY ("PRE_SCH_REAL" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_SCHEDULE" MODIFY ("PRE_SCH_PLAN" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_SCHEDULE" MODIFY ("PRE_SCH_PRE_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_SCHEDULE" MODIFY ("PRE_SCH_PAR_SCH_PAT_ID" NOT NULL ENABLE);
  ALTER TABLE "PGIPRE_SCHEDULE" MODIFY ("PRE_SCH_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table PGIPAR_BLOCKS_ATTRIBUTES
--------------------------------------------------------

  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" ADD CONSTRAINT "PGIPAR_BLOCKS_ATTRIBUTES_FK1" FOREIGN KEY ("PAR_BLO_ATT_ATT_ID")
	  REFERENCES "PGIPAR_ATTRIBUTES" ("PAR_ATT_ID") ENABLE;
  ALTER TABLE "PGIPAR_BLOCKS_ATTRIBUTES" ADD CONSTRAINT "PGIPAR_BLOCKS_ATTRIBUTES_FK2" FOREIGN KEY ("PAR_BLO_ATT_BLO_ID")
	  REFERENCES "PGIPAR_BLOCKS" ("PAR_BLO_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PGIPAR_RANGES
--------------------------------------------------------

  ALTER TABLE "PGIPAR_RANGES" ADD CONSTRAINT "PGIPAR_RANGES_FK1" FOREIGN KEY ("PAR_RAN_DAY_ID")
	  REFERENCES "PGIPAR_DAYS" ("PAR_DAY_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PGIPAR_SCHEDULE_PATTERN
--------------------------------------------------------

  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" ADD CONSTRAINT "PGIPAR_SCHEDULE_PATTERN_FK1" FOREIGN KEY ("PAR_SCH_PAT_BLO_ID")
	  REFERENCES "PGIPAR_BLOCKS" ("PAR_BLO_ID") ENABLE;
  ALTER TABLE "PGIPAR_SCHEDULE_PATTERN" ADD CONSTRAINT "PGIPAR_SCHEDULE_PATTERN_FK2" FOREIGN KEY ("PAR_SCH_PAT_RAN_ID")
	  REFERENCES "PGIPAR_RANGES" ("PAR_RAN_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PGIPRE_SCHEDULE
--------------------------------------------------------

  ALTER TABLE "PGIPRE_SCHEDULE" ADD CONSTRAINT "PGIPRE_SCHEDULE_FK1" FOREIGN KEY ("PRE_SCH_PAR_SCH_PAT_ID")
	  REFERENCES "PGIPAR_SCHEDULE_PATTERN" ("PAR_SCH_PAT_ID") ENABLE;
  ALTER TABLE "PGIPRE_SCHEDULE" ADD CONSTRAINT "PGIPRE_SCHEDULE_FK2" FOREIGN KEY ("PRE_SCH_PRE_ID")
	  REFERENCES "PGIPRE_PRESENCES" ("PRE_ID") ENABLE;
--------------------------------------------------------
--  DDL for Trigger PGIPAR_ATTRIBUTES_AUDIT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PGIPAR_ATTRIBUTES_AUDIT_TRG" BEFORE
  INSERT OR
  UPDATE ON PGIPAR_ATTRIBUTES
    /** ============================================================================
    ** ==
    ** == Generated on: 2014-11-11 09:03:34
    ** == Contact: andrzej.raczkowski@ext.sigi.lu
    ** ==
    ** ========================================================================= */
    --
    REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW BEGIN IF INSERTING THEN
    --
    IF :NEW.PAR_ATT_ID IS NULL THEN
  SELECT PGIPAR_ATT_PK_SEQ.NEXTVAL INTO :NEW.PAR_ATT_ID FROM dual;
END IF;
--
SELECT NVL(v('USER'), USER),
  SYSDATE
INTO :NEW.PAR_ATT_CREATION_USER,
  :NEW.PAR_ATT_CREATION_DATE
FROM DUAL;
--
ELSIF UPDATING THEN
  --
  SELECT NVL(v('USER'), USER),
    SYSDATE
  INTO :NEW.PAR_ATT_MODIFICATION_USER,
    :NEW.PAR_ATT_MODIFICATION_DATE
  FROM DUAL;
  --
END IF;
END;
/
ALTER TRIGGER "PGIPAR_ATTRIBUTES_AUDIT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PGIPAR_BLOCKS_ATT_AUDIT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PGIPAR_BLOCKS_ATT_AUDIT_TRG" BEFORE
  INSERT OR
  UPDATE ON PGIPAR_BLOCKS_ATTRIBUTES
    /** ============================================================================
    ** ==
    ** == Generated on: 2014-11-11 09:03:34
    ** == Contact: andrzej.raczkowski@ext.sigi.lu
    ** ==
    ** ========================================================================= */
    --
    REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW BEGIN IF INSERTING THEN
    --
    IF :NEW.PAR_BLO_ATT_ID IS NULL THEN
  SELECT PGIPAR_BLO_ATT_PK_SEQ.NEXTVAL INTO :NEW.PAR_BLO_ATT_ID FROM dual;
END IF;
--
SELECT NVL(v('USER'), USER),
  SYSDATE
INTO :NEW.PAR_BLO_ATT_CREATION_USER,
  :NEW.PAR_BLO_ATT_CREATION_DATE
FROM DUAL;
--
ELSIF UPDATING THEN
  --
  SELECT NVL(v('USER'), USER),
    SYSDATE
  INTO :NEW.PAR_BLO_ATT_MODIFICATION_USER,
    :NEW.PAR_BLO_ATT_MODIFICATION_DATE
  FROM DUAL;
  --
END IF;
END;
/
ALTER TRIGGER "PGIPAR_BLOCKS_ATT_AUDIT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PGIPAR_BLOCKS_AUDIT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PGIPAR_BLOCKS_AUDIT_TRG" BEFORE
  INSERT OR
  UPDATE ON PGIPAR_BLOCKS
    /** ============================================================================
    ** ==
    ** == Generated on: 2014-11-11 09:03:34
    ** == Contact: andrzej.raczkowski@ext.sigi.lu
    ** ==
    ** ========================================================================= */
    --
    REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW BEGIN IF INSERTING THEN
    --
    IF :NEW.PAR_BLO_ID IS NULL THEN
  SELECT PGIPAR_BLO_PK_SEQ.NEXTVAL INTO :NEW.PAR_BLO_ID FROM dual;
END IF;
--
SELECT NVL(v('USER'), USER),
  SYSDATE
INTO :NEW.PAR_BLO_CREATION_USER,
  :NEW.PAR_BLO_CREATION_DATE
FROM DUAL;
--
ELSIF UPDATING THEN
  --
  SELECT NVL(v('USER'), USER),
    SYSDATE
  INTO :NEW.PAR_BLO_MODIFICATION_USER,
    :NEW.PAR_BLO_MODIFICATION_DATE
  FROM DUAL;
  --
END IF;
END;
/
ALTER TRIGGER "PGIPAR_BLOCKS_AUDIT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PGIPAR_DAYS_AUDIT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PGIPAR_DAYS_AUDIT_TRG" BEFORE
  INSERT OR
  UPDATE ON PGIPAR_DAYS
    /** ============================================================================
    ** ==
    ** == Generated on: 2014-11-11 09:03:34
    ** == Contact: andrzej.raczkowski@ext.sigi.lu
    ** ==
    ** ========================================================================= */
    --
    REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW BEGIN IF INSERTING THEN
    --
    IF :NEW.PAR_DAY_ID IS NULL THEN
  SELECT PGIPAR_DAY_PK_SEQ.NEXTVAL INTO :NEW.PAR_DAY_ID FROM dual;
END IF;
--
SELECT NVL(v('USER'), USER),
  SYSDATE
INTO :NEW.PAR_DAY_CREATION_USER,
  :NEW.PAR_DAY_CREATION_DATE
FROM DUAL;
--
ELSIF UPDATING THEN
  --
  SELECT NVL(v('USER'), USER),
    SYSDATE
  INTO :NEW.PAR_DAY_MODIFICATION_USER,
    :NEW.PAR_DAY_MODIFICATION_DATE
  FROM DUAL;
  --
END IF;
END;
/
ALTER TRIGGER "PGIPAR_DAYS_AUDIT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PGIPAR_RANGES_AUDIT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PGIPAR_RANGES_AUDIT_TRG" BEFORE
  INSERT OR
  UPDATE ON PGIPAR_RANGES
    /** ============================================================================
    ** ==
    ** == Generated on: 2014-11-11 09:03:34
    ** == Contact: andrzej.raczkowski@ext.sigi.lu
    ** ==
    ** ========================================================================= */
    --
    REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW BEGIN IF INSERTING THEN
    --
    IF :NEW.PAR_RAN_ID IS NULL THEN
  SELECT PGIPAR_RAN_PK_SEQ.NEXTVAL INTO :NEW.PAR_RAN_ID FROM dual;
END IF;
--
SELECT NVL(v('USER'), USER),
  SYSDATE
INTO :NEW.PAR_RAN_CREATION_USER,
  :NEW.PAR_RAN_CREATION_DATE
FROM DUAL;
--
ELSIF UPDATING THEN
  --
  SELECT NVL(v('USER'), USER),
    SYSDATE
  INTO :NEW.PAR_RAN_MODIFICATION_USER,
    :NEW.PAR_RAN_MODIFICATION_DATE
  FROM DUAL;
  --
END IF;
END;
/
ALTER TRIGGER "PGIPAR_RANGES_AUDIT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger PGIPAR_SCH_PAT_AUDIT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "PGIPAR_SCH_PAT_AUDIT_TRG" BEFORE
  INSERT OR
  UPDATE ON PGIPAR_SCHEDULE_PATTERN
    /** ============================================================================
    ** ==
    ** == Generated on: 2014-11-11 09:03:34
    ** == Contact: andrzej.raczkowski@ext.sigi.lu
    ** ==
    ** ========================================================================= */
    --
    REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW BEGIN IF INSERTING THEN
    --
    IF :NEW.PAR_SCH_PAT_ID IS NULL THEN
  SELECT PGIPAR_SCH_PAT_PK_SEQ.NEXTVAL INTO :NEW.PAR_SCH_PAT_ID FROM dual;
END IF;
--
SELECT NVL(v('USER'), USER),
  SYSDATE
INTO :NEW.PAR_SCH_PAT_CREATION_USER,
  :NEW.PAR_SCH_PAT_CREATION_DATE
FROM DUAL;
--
ELSIF UPDATING THEN
  --
  SELECT NVL(v('USER'), USER),
    SYSDATE
  INTO :NEW.PAR_SCH_PAT_MODIFICATION_USER,
    :NEW.PAR_SCH_PAT_MODIFICATION_DATE
  FROM DUAL;
  --
END IF;
END;
/
ALTER TRIGGER "PGIPAR_SCH_PAT_AUDIT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Package PGIPAR_CLICKB_PLUGIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "PGIPAR_CLICKB_PLUGIN"
IS
  FUNCTION render(
      p_item                IN apex_plugin.t_page_item ,
      p_plugin              IN apex_plugin.t_plugin ,
      p_value               IN VARCHAR2 ,
      p_is_readonly         IN BOOLEAN ,
      p_is_printer_friendly IN BOOLEAN )
    RETURN apex_plugin.t_page_item_render_result;
  -- test
  PROCEDURE save_data(
      p_id   VARCHAR2,
      p_data VARCHAR2);
END pgipar_clickb_plugin;

/
--------------------------------------------------------
--  DDL for Package PGIPAR_DADB_PLUGIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "PGIPAR_DADB_PLUGIN" is


  function render(p_region              in apex_plugin.t_region,
                  p_plugin              in apex_plugin.t_plugin,
                  p_is_printer_friendly in boolean)
    return apex_plugin.t_region_render_result;

  -- test
PROCEDURE save_data(
      p_unit_id  NUMBER,
      p_day_id   NUMBER,
      p_vacation VARCHAR2,
      p_data     VARCHAR2,
      p_type VARCHAR2);
end pgipar_dadb_plugin;

/
--------------------------------------------------------
--  DDL for Package PGIPAR_MRS_PLUGIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "PGIPAR_MRS_PLUGIN"
IS
  FUNCTION render(
      p_region              IN apex_plugin.t_region,
      p_plugin              IN apex_plugin.t_plugin,
      p_is_printer_friendly IN BOOLEAN)
    RETURN apex_plugin.t_region_render_result;
  --
  -- test save data
  PROCEDURE save_data(
      p_unit_id  NUMBER,
      p_day_id   NUMBER,
      p_vacation VARCHAR2,
      p_data     VARCHAR2);
END pgipar_mrs_plugin;

/
--------------------------------------------------------
--  DDL for Package Body PGIPAR_CLICKB_PLUGIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "PGIPAR_CLICKB_PLUGIN"
IS
  FUNCTION render(
      p_item                IN apex_plugin.t_page_item ,
      p_plugin              IN apex_plugin.t_plugin ,
      p_value               IN VARCHAR2 ,
      p_is_readonly         IN BOOLEAN ,
      p_is_printer_friendly IN BOOLEAN )
    RETURN apex_plugin.t_page_item_render_result
  IS
    l_value VARCHAR2(32767) := sys.htf.escape_sc (p_value);
    l_name  VARCHAR2(30);
    l_min apex_application_page_items.attribute_01%type                    := COALESCE(p_item.attribute_01, '0');
    l_max apex_application_page_items.attribute_02%type                    := COALESCE(p_item.attribute_02, '1440');
    l_step apex_application_page_items.attribute_03%type                   := COALESCE(p_item.attribute_03, '30');
    l_step_label_disp_format apex_application_page_items.attribute_04%type := COALESCE(p_item.attribute_04, 'function (s) {return "";}');
    l_first_instance apex_application_page_items.attribute_05%type         := COALESCE(p_item.attribute_05, 'Y');
    l_options JSON                                                         := json();
    l_change_callback VARCHAR2(32767);
    retval apex_plugin.t_page_item_render_result;
    l_block_data JSON            := json();
    l_blocks_data_list json_list := json_list();
      --
    l_unit     VARCHAR2(200);
    l_vacation VARCHAR2(200);
    l_day      VARCHAR2(200);
    --
  BEGIN
    --
    l_name := apex_plugin.get_input_name_for_page_item (false);
    --
    -- load the css and js only for first plugin instance
    IF l_first_instance = 'Y' THEN
      -- CSS files
      apex_css.add_file(p_name => 'main', p_directory => p_plugin.file_prefix);
      -- JS files
      apex_javascript.add_library(p_name => 'vendor', p_directory => p_plugin.file_prefix, p_version => NULL);
      apex_javascript.add_library(p_name => 'main', p_directory => p_plugin.file_prefix, p_version => NULL);
    END IF;
    -- html part
    -- Showing the item and blocks
    sys.htp.p ('<input type="hidden" name="'||l_name||'" id="'||p_item.name||'" '|| 'size="'||p_item.element_width||'" '|| p_item.element_attributes||' />');
    sys.htp.p ('<div id="'||p_item.name||'_parent" '||p_item.element_option_attributes||'></div>');
    --
    -- JS ClickB class constructor
    sys.htp.p('<script>var ' || p_item.name || ';</script>');
    l_options.put(pair_name => 'min', pair_value => l_min);
    l_options.put(pair_name => 'max', pair_value => l_max);
    l_options.put(pair_name => 'step', pair_value => l_step);
    l_options.put(pair_name => 'stepLabelDispFormat', pair_value => l_step_label_disp_format);
    apex_javascript.add_onload_code(p_code => p_item.name || '= new ClickB("' || p_item.name || '",'||l_options.to_char||');');
    --
    -- JS ClickB API
    -- callback on change
    l_change_callback := 'function () {$("#'||p_item.name ||'").val(JSON.stringify('|| p_item.name||'.getBlocks()));}';
    apex_javascript.add_onload_code(p_code => p_item.name || '.setChangeCallback('||l_change_callback||');');
    --
    FOR rec IN
    (SELECT sp.*,
      b.par_blo_id,
      b.par_blo_value
    FROM PGIPAR_RANGES r,
      pgipar_schedule_pattern sp,
      pgipar_blocks b
    WHERE r.par_ran_id      = sp.par_sch_pat_ran_id
    AND b.par_blo_id        = sp.par_sch_pat_blo_id
    AND r.PAR_RAN_DAY_ID    = l_day
    AND r.PAR_RAN_VACATION  = l_vacation
    AND sp.PAR_SCH_PAT_TYPE = 'KID'
    )
    LOOP
      l_block_data := json();
      l_block_data.put(pair_name => 'id', pair_value => rec.par_blo_id);
      l_block_data.put(pair_name => 'start', pair_value => rec.PAR_sch_pat_START);
      l_block_data.put(pair_name => 'value', pair_value => rec.par_blo_value);
      l_block_data.put(pair_name => 'colorp', pair_value => ''); --rec.par_blo_color_p);
      l_block_data.put(pair_name => 'coloru', pair_value => ''); --rec.par_blo_color_u);
      l_block_data.put(pair_name => 'planned', pair_value => '1');
      l_blocks_data_list.append(l_block_data.to_json_value);
    END LOOP;
    --
    apex_javascript.add_onload_code(p_code => p_item.name || '.addBlocks('||l_blocks_data_list.to_char||');');
    --
    --
    --
    RETURN retval;
  END;
-- test
  PROCEDURE save_data(
      p_id   VARCHAR2,
      p_data VARCHAR2)
  IS
    l_count NUMBER;
  BEGIN
--    SELECT COUNT(1) INTO l_count FROM TEST_PLUGINS_DATA WHERE clickb_id = p_id;
--    IF l_count > 0 THEN
--      UPDATE TEST_PLUGINS_DATA SET clickb_data = p_data WHERE clickb_id = p_id;
--    ELSE
--      INSERT
--      INTO TEST_PLUGINS_DATA
--        (
--          clickb_id,
--          clickb_data
--        )
--        VALUES
--        (
--          p_id,
--          p_data
--        );
--    END IF;
null;
  END;
END pgipar_clickb_plugin;

/
--------------------------------------------------------
--  DDL for Package Body PGIPAR_DADB_PLUGIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "PGIPAR_DADB_PLUGIN"
IS
  FUNCTION render(
      p_region              IN apex_plugin.t_region,
      p_plugin              IN apex_plugin.t_plugin,
      p_is_printer_friendly IN BOOLEAN)
    RETURN apex_plugin.t_region_render_result
  IS
    -- Component attributes
    l_min apex_application_page_regions.attribute_01%type                 := COALESCE(p_region.attribute_01, '0');
    l_max apex_application_page_regions.attribute_02%type                 := COALESCE(p_region.attribute_02, '1440');
    l_step apex_application_page_regions.attribute_03%type                := COALESCE(p_region.attribute_03, 30);
    l_toolbarId apex_application_page_regions.attribute_04%type           := COALESCE(p_region.attribute_04, 'toolbar1');
    l_blocksToolbar apex_application_page_regions.attribute_05%type       := COALESCE(p_region.attribute_05, '[]');
    l_type apex_application_page_regions.attribute_06%type                := COALESCE(p_region.attribute_06, 'KID');
    l_stepLabelDispFormat apex_application_page_regions.attribute_07%type := p_region.attribute_07;
    l_elementId apex_application_page_regions.attribute_08%type           := p_region.attribute_08;
    l_first_instance apex_application_page_regions.attribute_09%type      := COALESCE(p_region.attribute_09, 'Y');
    l_attToolbarId apex_application_page_regions.attribute_10%type        := COALESCE(p_region.attribute_10, 'toolbar1');
    --
    l_options JSON          := json();
    l_blocks JSON_LIST      := json_list();
    l_block JSON            := json();
    l_attributes JSON_LIST  := json_list();
    l_attribute JSON        := json();
    l_open_block JSON_LIST  := json_list();
    l_open_blocks JSON_LIST := json_list();
    --
    l_unit     VARCHAR2(200);
    l_vacation VARCHAR2(200);
    l_day      VARCHAR2(200);
    --
    retval apex_plugin.t_region_render_result;
  BEGIN
    IF apex_application.g_debug THEN
      apex_plugin_util.debug_region(p_plugin => p_plugin, p_region => p_region);
    END IF;
    -- load the css and js only for first plugin instance
    IF l_first_instance = 'Y' THEN
      -- CSS files
      apex_css.add_file(p_name => 'vendor', p_directory => p_plugin.file_prefix);
      apex_css.add_file(p_name => 'main', p_directory => p_plugin.file_prefix);
      -- JS files
      apex_javascript.add_library(p_name => 'vendor', p_directory => p_plugin.file_prefix, p_version => NULL);
      apex_javascript.add_library(p_name => 'main', p_directory => p_plugin.file_prefix, p_version => NULL);
    END IF;
    -- html part
    sys.htp.p('<script>var ' || l_elementId || '</script>');
    sys.htp.p('<div id="content-' || l_elementId || '" class="content"><div id="' || l_elementId || '"></div></div>');
    --  plugin inicialization
    l_options.put(pair_name => 'min', pair_value => l_min);
    l_options.put(pair_name => 'max', pair_value => l_max);
    l_options.put(pair_name => 'step', pair_value => l_step);
    l_options.put(pair_name => 'toolbarId', pair_value => l_toolbarId);
    l_options.put(pair_name => 'attToolbarId', pair_value => l_attToolbarId);
    --
    --
    l_unit     := APEX_UTIL.GET_SESSION_STATE('P5_UNIT');
    l_vacation := APEX_UTIL.GET_SESSION_STATE('P5_VACATION');
    l_day      := APEX_UTIL.GET_SESSION_STATE('P5_DAY');
    --
    --  BLOCKS on the TOOLBAR
    --
    FOR rec IN
    (SELECT * FROM pgipar_blocks b WHERE b.PAR_BLO_TYPE = l_type
    )
    LOOP
      l_block := json();
      l_block.put(pair_name => 'blockId', pair_value => rec.PAR_BLO_ID);
      l_block.put(pair_name => 'code', pair_value => rec.PAR_BLO_CODE);
      l_block.put(pair_name => 'name', pair_value => rec.PAR_BLO_NAME);
      l_block.put(pair_name => 'value', pair_value => rec.PAR_BLO_VALUE);
      -- attributes
      FOR att IN
      (SELECT ba.PAR_BLO_ATT_VALUE,
        a.PAR_ATT_CODE
      FROM pgipar_attributes a,
        pgipar_blocks_attributes ba
      WHERE ba.PAR_BLO_ATT_ATT_ID = a.PAR_ATT_ID
      AND ba.PAR_BLO_ATT_BLO_ID   = rec.PAR_BLO_ID
      )
      LOOP
        l_block.put(pair_name => lower(REPLACE(att.PAR_ATT_CODE,'_')), pair_value => att.PAR_BLO_ATT_VALUE);
      END LOOP;
      --
      l_blocks.append(l_block.to_json_value);
    END LOOP;
    l_options.put(pair_name => 'blocksToolbar', pair_value => l_blocks.to_char(false));
    --
    --  BLOCKS INSTANCE ATTRIBUTES
    --
    -- only for kid type of blocks
--    IF l_type = 'KID' THEN
--      FOR rec IN
--      (SELECT * FROM pgipar_attributes att WHERE att.PAR_ATT_INSTANCE = 'Y'
--      )
--      LOOP
--        l_attribute := json();
--        l_attribute.put(pair_name => 'attId', pair_value => rec.par_att_id);
--        l_attribute.put(pair_name => 'attClass', pair_value => rec.par_att_font_icon);
--        l_attribute.put(pair_name => 'attCode', pair_value => rec.par_att_code);
--        --
--        l_attributes.append(l_attribute.to_json_value);
--      END LOOP;
--      l_options.put(pair_name => 'attributesToolbar', pair_value => l_attributes.to_char(false));
--    END IF;
    --
    -- PGIPAR_RANGES
    --
    FOR rec IN
    (SELECT  *
    FROM PGIPAR_RANGES r
    WHERE r.PAR_RAN_DAY_ID = l_day
    AND r.PAR_RAN_VACATION = l_vacation
    AND r.par_ran_org_id   = l_unit
    )
    LOOP
      l_open_block := json_list(); --empty structure
      l_open_block.append(rec.PAR_RAN_OPEN_FROM);
      l_open_block.append(rec.PAR_RAN_OPEN_TO - rec.PAR_RAN_OPEN_FROM);
      l_open_block.append(rec.par_ran_id);
      l_open_blocks.append(l_open_block);
    END LOOP;
    l_options.put(pair_name => 'openBlocks', pair_value => l_open_blocks.to_char);
    apex_javascript.add_onload_code(p_code => l_elementId || ' = new Dadb("' || l_elementId || '",' || l_options.to_char || ');');
    --
    -- SCHEDULE PATTERN BLOCKS
    --
    l_blocks := json_list();
    --
    FOR rec IN
    (SELECT sp.*,
      b.par_blo_id,
      b.par_blo_value
    FROM PGIPAR_RANGES r,
      pgipar_schedule_pattern sp,
      pgipar_blocks b
    WHERE r.par_ran_id      = sp.par_sch_pat_ran_id
    AND b.par_blo_id        = sp.par_sch_pat_blo_id
    AND r.PAR_RAN_DAY_ID    = l_day
    AND r.PAR_RAN_VACATION  = l_vacation
    AND sp.PAR_SCH_PAT_TYPE = l_type
    )
    LOOP
      l_block := json();
      --
      l_block.put(pair_name => 'start', pair_value => rec.PAR_sch_pat_START);
      l_block.put(pair_name => 'value', pair_value => rec.par_blo_value);
      l_block.put(pair_name => 'blockId', pair_value => rec.par_blo_id);
      --
      -- attributes
      FOR att IN
      (SELECT ba.PAR_BLO_ATT_VALUE,
        a.PAR_ATT_CODE
      FROM pgipar_attributes a,
        pgipar_blocks_attributes ba
      WHERE ba.PAR_BLO_ATT_ATT_ID = a.PAR_ATT_ID
      AND ba.PAR_BLO_ATT_BLO_ID   = rec.PAR_BLO_ID
      )
      LOOP
        l_block.put(pair_name => lower(REPLACE(att.PAR_ATT_CODE,'_')), pair_value => att.PAR_BLO_ATT_VALUE);
      END LOOP;
      --
      -- attributes instance
--      FOR att_inst IN
--      (SELECT a.PAR_ATT_ID,
--        a.PAR_ATT_FONT_ICON,
--        a.PAR_ATT_CODE
--      FROM pgipar_attributes a,
--        PGIPAR_SCHEDULE_PATTERN_ATTRI ia
--      WHERE ia.SCH_PAT_ATT_ATT_ID   = a.PAR_ATT_ID
--      AND ia.SCH_PAT_ATT_SCH_PAT_ID = rec.PAR_SCH_PAT_ID
--      )
--      LOOP
--        l_block.put(pair_name => 'attId', pair_value => to_char(att_inst.PAR_ATT_ID));
--        l_block.put(pair_name => 'attClass', pair_value => att_inst.PAR_ATT_FONT_ICON);
--        --l_block.put(pair_name => 'attCode', pair_value => att_inst.PAR_ATT_CODE);
--      END LOOP;
      --
      --
      l_blocks.append(l_block.to_json_value);
    END LOOP;
    --raise_application_error(-20001,  l_blocks.to_char);
    --
    apex_javascript.add_onload_code(p_code => l_elementId || '.addBlocks(' || l_blocks.to_char|| ');');
    --
    RETURN retval;
  END render;
--
--
--
  PROCEDURE save_data(
      p_unit_id  NUMBER,
      p_day_id   NUMBER,
      p_vacation VARCHAR2,
      p_data     VARCHAR2,
      p_type     VARCHAR2)
  IS
    all_blocks json_list := json_list();
    one_block json       := json();
    l_range_id       NUMBER;
    l_block_id       NUMBER;
    l_start          NUMBER;
    l_att_id         NUMBER;
    l_PAR_SCH_PAT_ID NUMBER;
    tempdata json_value;
  BEGIN
    all_blocks := json_list(p_data);

    DELETE
    FROM PGIPAR_SCHEDULE_PATTERN
    WHERE PAR_SCH_PAT_RAN_ID IN
      (SELECT r.par_ran_id
      FROM PGIPAR_RANGES r
      WHERE r.PAR_RAN_DAY_ID = p_day_id
      AND r.PAR_RAN_VACATION = p_vacation
      AND r.PAR_RAN_ORG_ID   = p_unit_id
      )
    AND PAR_SCH_PAT_TYPE = p_type;
    --
    FOR i IN 1..all_blocks.count
    LOOP
      one_block  := json(all_blocks.get(i));
      l_range_id := REPLACE(one_block.get('rangeId').to_char,'"');
      l_block_id := REPLACE(one_block.get('blockId').to_char,'"');
      l_start    := REPLACE(one_block.get('start').to_char,'"');
      IF one_block.exist('attId') THEN
        l_att_id := REPLACE(one_block.get('attId').to_char,'"');
      ELSE
        l_att_id := NULL;
      END IF;
      --
      INSERT
      INTO PGIPAR_SCHEDULE_PATTERN
        (
          PAR_SCH_PAT_BLO_ID,
          PAR_SCH_PAT_RAN_ID,
          PAR_SCH_PAT_START,
          PAR_SCH_PAT_TYPE
        )
        VALUES
        (
          l_block_id,
          l_range_id,
          l_start,
          p_type
        );

    END LOOP;
  END;
end pgipar_dadb_plugin;

/
--------------------------------------------------------
--  DDL for Package Body PGIPAR_MRS_PLUGIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "PGIPAR_MRS_PLUGIN"
IS

  FUNCTION render(
      p_region              IN apex_plugin.t_region,
      p_plugin              IN apex_plugin.t_plugin,
      p_is_printer_friendly IN BOOLEAN)
    RETURN apex_plugin.t_region_render_result
  IS
    -- Component attributes
    l_min apex_application_page_regions.attribute_01%type                   := COALESCE(p_region.attribute_01, '0');
    l_max apex_application_page_regions.attribute_02%type                   := COALESCE(p_region.attribute_02, '1440');
    l_step apex_application_page_regions.attribute_03%type                  := COALESCE(p_region.attribute_03, '30');
    l_gap apex_application_page_regions.attribute_04%type                   := COALESCE(p_region.attribute_04, '150');
    l_newlength apex_application_page_regions.attribute_05%type             := COALESCE(p_region.attribute_05, '90');
    l_handleLabelDispFormat apex_application_page_regions.attribute_06%type := COALESCE(p_region.attribute_06, 'function(steps) {var hours = Math.floor(Math.abs(steps) / 60); var minutes = Math.abs(steps) % 60; return ((hours < 10  >= 0) ? "0" : "") + hours + ":" + ((minutes < 10  >= 0) ? "0" : "") + minutes; }');
    l_stepLabelDispFormat apex_application_page_regions.attribute_07%type   := COALESCE(p_region.attribute_07, 'function(steps) {var hours = Math.floor(Math.abs(steps) / 60);return Math.abs(steps) % 60 === 0 ? ((hours < 10  >= 0) ? "0" : "") + hours : ""; }');
    l_elementId apex_application_page_regions.attribute_08%type      := p_region.attribute_08;
    l_firstInstanceOnPage apex_application_page_regions.attribute_09%type := COALESCE(p_region.attribute_09, 'Y');
    l_outItemId apex_application_page_regions.attribute_10%type := COALESCE(p_region.attribute_10, 'Y');
    l_options JSON                                                   := json();
    l_unit     VARCHAR2(200);
    l_vacation VARCHAR2(200);
    l_day      VARCHAR2(200);
    l_functionOnChange VARCHAR2(4000);
    l_range json := json();
    l_ranges JSON_LIST  := json_list();
    retval apex_plugin.t_region_render_result;
  BEGIN
    IF apex_application.g_debug THEN
      apex_plugin_util.debug_region(p_plugin => p_plugin, p_region => p_region);
    END IF;
    -- load the css and js only for first plugin instance
    IF l_firstInstanceOnPage = 'Y' THEN
      -- CSS files
      apex_css.add_file(p_name => 'vendor', p_directory => p_plugin.file_prefix);
      apex_css.add_file(p_name => 'main', p_directory => p_plugin.file_prefix);
      -- JS files
      apex_javascript.add_library(p_name => 'vendor', p_directory => p_plugin.file_prefix, p_version => NULL);
      apex_javascript.add_library(p_name => 'main', p_directory => p_plugin.file_prefix, p_version => NULL);
    END IF;
    -- html part
    l_functionOnChange := 'function onChangeInfo(){ $("#'|| l_outItemId || '").val('|| l_elementId ||'.getPeriodsValues());};';
    sys.htp.p('<script>var ' || l_elementId || ';'|| l_functionOnChange||'</script>');
    sys.htp.p('<div id="content-' || l_elementId || '" class="MrsContent"><div id="' || l_elementId || '"></div></div>');
    --  plugin inicialization
    l_options.put(pair_name => 'min', pair_value => l_min);
    l_options.put(pair_name => 'max', pair_value => l_max);
    l_options.put(pair_name => 'step', pair_value => l_step);
    l_options.put(pair_name => 'gap', pair_value => l_gap);
    l_options.put(pair_name => 'newlength', pair_value => l_newlength);
    l_options.put(pair_name => 'handleLabelDispFormat', pair_value => l_handleLabelDispFormat);
    l_options.put(pair_name => 'stepLabelDispFormat', pair_value => l_stepLabelDispFormat);
    apex_javascript.add_onload_code(p_code => l_elementId || ' = new Mrs("' || l_elementId || '",' || l_options.to_char || ');');
    --
    --
    l_unit := APEX_UTIL.GET_SESSION_STATE('P3_UNIT');
    l_vacation := APEX_UTIL.GET_SESSION_STATE('P3_VACATION');
    l_day      := APEX_UTIL.GET_SESSION_STATE('P3_DAY');
    --
    --
    FOR rec IN
    (SELECT  *
    FROM PGIPAR_RANGES r
    WHERE r.PAR_RAN_DAY_ID = l_day
    AND r.PAR_RAN_VACATION = l_vacation
    AND r.par_ran_org_id = l_unit
    )
    LOOP
      l_range := json();
      --
      l_range.put(pair_name => 'id', pair_value => rec.PAR_RAN_ID);
      l_range.put(pair_name => 'start', pair_value => rec.PAR_RAN_OPEN_FROM);
      l_range.put(pair_name => 'value', pair_value => rec.PAR_RAN_OPEN_TO - rec.PAR_RAN_OPEN_FROM);
      --
      l_ranges.append(l_range.to_json_value);
    END LOOP;
    --
    apex_javascript.add_onload_code(p_code => l_elementId || '.addPeriods(' || l_ranges.to_char(false) || ');');
    --
    -- set initial status
    APEX_UTIL.SET_SESSION_STATE(l_outItemId,l_ranges.to_char(false) );
    --
    apex_javascript.add_onload_code(p_code => l_elementId || '.setOnChangeCallback(onChangeInfo);');
    --
    RETURN retval;
  END render;
-- test
--
  PROCEDURE save_data(
      p_unit_id  NUMBER,
      p_day_id   NUMBER,
      p_vacation VARCHAR2,
      p_data     VARCHAR2)
  IS
    all_ranges json_list;
    one_range json_list := json_list();
    l_open_from VARCHAR2(20);
    l_open_to   NUMBER;
  BEGIN
    all_ranges := json_list(p_data);
    DELETE PGIPAR_RANGES r
    WHERE r.PAR_RAN_DAY_ID = p_day_id
      AND r.PAR_RAN_ORG_ID = p_unit_id
      AND r.PAR_RAN_VACATION = p_vacation;

    --
    FOR i IN 1..all_ranges.count
    LOOP
      one_range   := json_list(all_ranges.get(i));
      l_open_from := one_range.get(1).to_char;
      l_open_to   := l_open_from + one_range.get(2).to_char;
      INSERT
      INTO PGIPAR_RANGES
        (
          PAR_RAN_ORG_ID,
          PAR_RAN_OPEN_FROM,
          PAR_RAN_OPEN_TO,
          PAR_RAN_VACATION,
          PAR_RAN_DAY_ID,
          PAR_RAN_ACTIVE
        )
        VALUES
        (
          p_unit_id,
          l_open_from,
          l_open_to,
          p_vacation,
          p_day_id,
          'Y'
        );
    END LOOP;
  END;
END pgipar_mrs_plugin;

/
